Description: This template deploys an EC2 instance and configures it to run a vanilla Minecraft server.

Parameters:
  EC2LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  EC2InstanceType:
    Type: String
    Default: m5a.large
    AllowedValues:
      - m5a.large
      - m5a.xlarge
      - c5a.large
      - c5a.xlarge
    Description: Enter m5a.large or c5a.large. Default is m5a.large.
  SGUserIPAddress:
    Type: String
    Description: 'Enter your public IP address for whitelisting. Example: 10.10.10.10/32'
  EC2Name:
    Type: String
    Default: minecraft01
    Description: Enter the name of the EC2 instance.
  EC2KeyName:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: Choose a key pair that is available in this region.
    ConstraintDescription: Must be the name of an existing EC2 key pair.
  SGVPCId:
    Type: 'AWS::EC2::VPC::Id'
    Description: Choose the virtual private cloud ID.
    ConstraintDescription: Must be the ID of an existing VPC.
  ENIVPCSubnetId:
    Type: 'AWS::EC2::Subnet::Id'
    Description: Choose the VPC subnet ID.
    ConstraintDescription: Must be the ID of an existing VPC subnet.
  EC2MinecraftServerJar:
    Type: String
    Description: 'Enter the URL of the Minecraft server download. Example: https://launcher.mojang.com/v1/objects/c8f83c5655308435b3dcf03c06d9fe8740a77469/server.jar'

Resources:
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join [ '', [ !Ref EC2Name, '-sg' ] ]
      GroupDescription: Enable SSH access to a specific IP, and public access to the game port 25565.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SGUserIPAddress
        - IpProtocol: tcp
          FromPort: 25565
          ToPort: 25565
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      VpcId: !Ref SGVPCId
  EC2NetworkInterface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref ENIVPCSubnetId
      Description: !Join [ 'Primary network interface for ', [ !Ref EC2Name ]]
      GroupSet:
        - !Ref EC2SecurityGroup
      SourceDestCheck: true
      Tags:
        - Key: Name
          Value: !Ref EC2Name
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EC2LatestAmiId
      KeyName: !Ref EC2KeyName
      InstanceType: !Ref EC2InstanceType
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref EC2NetworkInterface
          DeviceIndex: 0
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs: 
            VolumeType: gp3
            VolumeSize: 16
            DeleteOnTermination: true
            Encrypted: false
      Tags:
        - Key: Name
          Value: !Ref EC2Name
        - Key: purpose
          Value: minecraft-server
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            sudo yum install update -y
            sudo yum install java-17-amazon-corretto-devel -y
            mkdir /opt/minecraft
            wget ${EC2MinecraftServerJar} -O /opt/minecraft/server.jar
            echo "eula=true" > /opt/minecraft/eula.txt
            echo -e "#!/bin/bash\njava -Xmx7G -Xms1024M -jar server.jar nogui" > /opt/minecraft/start.sh
            chmod +x /opt/minecraft/start.sh
            echo -e "[Unit]\nDescription=Minecraft Server\nAfter=network-online.target\nWants=network-online.target\n\n[Service]\nType=oneshot\nWorkingDirectory=/opt/minecraft\nExecStart=/opt/minecraft/start.sh\n\n[Install]\nWantedBy=multi-user.target\n\n# cp minecraft.service /etc/systemd/system/minecraft.service\n# sudo systemctl daemon-reload\n#sudo systemctl enable minecraft.service\n" > /etc/systemd/system/minecraft.service
            systemctl daemon-reload
            systemctl enable minecraft.service
            systemctl start minecraft.service
